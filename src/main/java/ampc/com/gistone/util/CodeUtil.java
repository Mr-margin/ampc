package ampc.com.gistone.util;

import java.util.HashMap;
import java.util.Map;
import java.util.List;

public class CodeUtil {
public static Map<String,String> codearray(){
	Map<String,String> map=new HashMap();
	map.put("110100","110101,110102,110103,110104,110105,110106,110107,110108,110109,110111,110112,110113,110114,110115110116,110117,110228,110229");
	map.put("120100","120101,120102,120103,120104,120105,120106,120107,120108,120109,120110,120111,120112,120113,120114,120115,120221,120223,120225");
	map.put("130100","130100,130121,130123,130124,130125,130126,130127,130128,130129,130130,130131,130132,130133,130181,130182,130183,130184,130185");
	map.put("130200","130200,130223,130224,130225,130227,130229,130230,130281,130283");
	map.put("130300","130300,130321,130322,130323,130324");
	map.put("130400","130400,130421,130423,130424,130425,130426,130427,130428,130429,130430,130431,130432,130433,130434,130435,130481");
	map.put("130500","130500,130521,130522,130523,130524,130525,130526,130527,130528,130529,130530,130531,130532,130533,130534,130535,130581,130582");
	map.put("130600","130600,130621,130622,130623,130624,130625,130626,130627,130628,130629,130630,130631,130632,130633,130634,130635,130636,130637,130638,130681,130682,130683,130684");
	map.put("130700","130700,130721,130722,130723,130724,130725,130726,130727,130728,130729,130730,130731,130732,130733");
	map.put("130800","130800,130821,130822,130823,130824,130825,130826,130827,130828");
	map.put("130900","130900,130921,130922,130923,130924,130925,130926,130927,130928,130929,130930,130981,130982,130983,130984");
	map.put("131000","131000,131022,131023,131024,131025,131026,131028,131081,131082");
	map.put("131100","131100,131121,131122,131123,131124,131125,131126,131127,131128,131181,131182");
	map.put("140100","140100,140121,140122,140123,140181");
	map.put("140200","140200,140221,140222,140223,140224,140225,140226,140227");
	map.put("140300","140300,140321,140322");
	map.put("140400","140400,140421,140423,140424,140425,140426,140427,140428,140429,140430,140431,140481");
	map.put("140500","140500,140521,140522,140524,140525,140581");
	map.put("140600","140600,140621,140622,140623,140624");
	map.put("140700","140700,140721,140722,140723,140724,140725,140726,140727,140728,140729,140781");
	map.put("140800","140800,140821,140822,140823,140824,140825,140826,140827,140828,140829,140830,140881,140882");
	map.put("140900","140900,140921,140922,140923,140924,140925,140926,140927,140928,140929,140930,140931,140932,140981");
	map.put("141000","141000,141021,141022,141023,141024,141025,141026,141027,141028,141029,141030,141031,141032,141033,141034,141081,141082");
	map.put("141100","141100,141121,141122,141123,141124,141125,141126,141127,141128,141129,141130,141181,141182");
	map.put("150100","150200,150221,150222,150223");
	map.put("150300","150300");
	map.put("150400","150400,150421,150422,150423,150424,150425,150426,150428,150429,150430");
	map.put("150500","150500,150521,150522,150523,150524,150525,150526,150581");
	map.put("150600","150600,150621,150622,150623,150624,150625,150626,150627");
	map.put("150700","150700,150721,150722,150723,150724,150725,150726,150727,150781,150782,150783,150784,150785");
	map.put("150800","150800,150821,150822,150823,150824,150825,150826");
	map.put("150900","150900,150921,150922,150923,150924,150925,150926,150927,150928,150929,150981");
	map.put("152200","152201,152202");
	map.put("152500","152221,152222,152223,152224,152501,152502,152522,152523,152524,152525,152526,152527,152528,152529,152530,152531");
	map.put("152900","152921,152922,152923");
	map.put("210100","210100,210122,210123,210124,210181");
	map.put("210200","210200,210224,210281,210282,210283");
	map.put("210300","210300,210321,210323,210381");
	map.put("210400","210400,210421,210422,210423");
	map.put("210500","210500,210521,210522");
	map.put("210600","210600,210624,210681,210682");
	map.put("210700","210700,210726,210727,210781,210782");
	map.put("210800","210800,210881,210882");
	map.put("210900","210900,210921,210922");
	map.put("211000","211000,211021,211081");
	map.put("211100","211100,211121,211122");
	map.put("211200","211200,211221,211223,211224,211281,211282");
	map.put("211300","211300,211321,211322,211324,211381,211382");
	map.put("211400","211400,211421,211422,211481");
	map.put("370100","370100,370124,370125,370126,370181");
	map.put("370200","370200,370281,370282,370283,370284,370285");
	map.put("370300","370300,370321,370322,370323");
	map.put("370400","370400,370481");
	map.put("370500","370500,370521,370522,370523");
	map.put("370600","370600,370634,370681,370682,370683,370684,370685,370686,370687");
	map.put("370700","370700,370724,370725,370781,370782,370783,370784,370785,370786");
	map.put("370800","370800,370826,370827,370828,370829,370830,370831,370832,370881,370882,370883");
	map.put("370900","370900,370921,370923,370982,370983");
	map.put("371000","371000,371081,371082,371083");
	map.put("371100","371100,371121,371122");
	map.put("371200","371200");
	map.put("371300","371300,371321,371322,371323,371324,371325,371326,371327,371328,371329");
	map.put("371400","371400,371421,371422,371423,371424,371425,371426,371427,371428,371481,371482");
	map.put("371500","371500,371521,371522,371523,371524,371525,371526,371581");
	map.put("371600","371600,371621,371622,371623,371624,371625,371626");
	map.put("371700","371700,371721,371722,371723,371724,371725,371726,371727,371728");
	map.put("410100","410100,410122,410181,410182,410183,410184,410185");
	map.put("410200","410200,410221,410222,410223,410224,410225");
	map.put("410300","410300,410322,410323,410324,410325,410326,410327,410328,410329,410381");
	map.put("410400","410400,410421,410422,410423,410425,410481,410482");
	map.put("410500","410500,410522,410523,410526,410527,410581");
	map.put("410600","410600,410621,410622");
	map.put("410700","410700,410721,410724,410725,410726,410727,410728,410781,410782");
	map.put("410800","410800,410821,410822,410823,410825,410881,410882,410883");
	map.put("410900","410900,410922,410923,410926,410927,410928");
	map.put("411000","411000,411023,411024,411025,411081,411082");
	map.put("411100","411100,411121,411122");
	map.put("411200","411200,411221,411222,411224,411281,411282");
	map.put("411300","411300,411321,411322,411323,411324,411325,411326,411327,411328,411329,411330,411381");
	map.put("411400","411400,411421,411422,411423,411424,411425,411426,411481");
	map.put("411500","411500,411521,411522,411523,411524,411525,411526,411527,411528");
	map.put("411600","411600,411621,411622,411623,411624,411625,411626,411627,411628,411681");
	map.put("411700","411700,411721,411722,411723,411724,411725,411726,411727,411728,411729");
	return map;
}
}
